<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吴彦祖小江&#39; Blog</title>
  
  <subtitle>佛祖保佑，永无bug!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xiangjiangcheng.cn/"/>
  <updated>2018-05-17T14:47:51.430Z</updated>
  <id>http://xiangjiangcheng.cn/</id>
  
  <author>
    <name>向江城</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis入门</title>
    <link href="http://xiangjiangcheng.cn/2018/05/17/redis-base/"/>
    <id>http://xiangjiangcheng.cn/2018/05/17/redis-base/</id>
    <published>2018-05-17T14:34:31.000Z</published>
    <updated>2018-05-17T14:47:51.430Z</updated>
    
    <content type="html"><![CDATA[<hr><p>注：下面$符号后面跟的都是命令！</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="0099ff" size="3">前言</font></h3><p>空闲时间，充实自己。从零开始重新认识redis。</p><h3 id="What-is-Redis"><a href="#What-is-Redis" class="headerlink" title="What is Redis?"></a><font color="0099ff" size="3">What is Redis?</font></h3><p>开源，原子性，速度快。</p><h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a><font color="0099ff" size="3">安装Redis</font></h3><h4 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h4><p>阿里云服务器 Ubuntu 16.04.3 LTS </p><h4 id="安装Redis，基础配置，使用"><a href="#安装Redis，基础配置，使用" class="headerlink" title="安装Redis，基础配置，使用"></a>安装Redis，基础配置，使用</h4><p>1.安装redis，使用以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install redis-server</span><br></pre></td></tr></table></figure></p><p>ps:安装完成后，通过命令<code>whereis redis</code>找到redis相关文件在哪,通常是在<code>/etc/redis</code></p><p>2.配置，让客户端可以远程访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/redis/redis.conf</span><br></pre></td></tr></table></figure></p><p>修改下面两个参数[bind和daemonize]：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># bind 127.0.0.1 </span><br><span class="line">bind 0.0.0.0  # 注释掉`bind 127.0.0.1`这行，加上`bind 0.0.0.0`，让客户端可以远程访问</span><br><span class="line">daemonize yes  # 修改这一项，no改为yes，让redis在后台运行（以守护进程方式运行）</span><br><span class="line">requirepass 123456  # 设置redis密码为：123456</span><br></pre></td></tr></table></figure></p><p>ps:如果不远程访问，可跳过这一步</p><p>3.启动Redis<br>直接启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server /etc/redis/redis.conf  # 根据配置文件启动某个redis，这里启动默认的，端口为6379</span><br></pre></td></tr></table></figure></p><p>4.查看 redis 是否启动？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli</span><br></pre></td></tr></table></figure></p><p>以上命令将打开以下终端：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure></p><p>上面127.0.0.1 是本机 IP ，6379 是 redis 服务端口。现在我们输入 PING 命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure></p><p>以上说明我们已经成功安装了redis。</p><p>5.关闭Redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ef | grep redis  # 查看已启动的redis</span><br><span class="line">$ redis-cli -p 6379 -a 123456 shutdown  # 通过客户端关闭端口为6379,密码为123456的redis</span><br><span class="line">$ kill -9 5311  # 通过杀进程的方式关闭指定redis实例</span><br></pre></td></tr></table></figure></p><p>6.同一台机器启动多个实例redis<br>这里，方便学习，我们创建一个端口号为<code>6380</code>的redis实例。具体操作步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ef | grep redis  # 这里查看redis进程，是没有6380的</span><br><span class="line">$ cp /etc/redis/redis.conf /etc/redis/redis_6380.conf</span><br><span class="line">$ cd /etc/redis/ </span><br><span class="line">$ ll</span><br><span class="line">$ vim redis_6380.conf # 修改配置文件，具体修改，参见下面ps部分</span><br><span class="line">$ redis-server /etc/redis/redis_6380.conf  # 根据端口为6380的redis</span><br><span class="line">$ ps -ef | grep redis  # 这里查看redis进程，会发现多了一个6380的，说明端口号为6380的redis启动成功</span><br><span class="line">$ redis-cli -p 6380 -a 123456 shutdown # 关闭</span><br></pre></td></tr></table></figure><p>ps:<br>vim redis_6380.conf:需要修改以下4点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">port 6380  # Redis监听端口</span><br><span class="line">pidfile /var/run/redis/redis-server-6380.pid  # 当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定</span><br><span class="line">logfile /var/log/redis/redis-server-6380.log  # 日志记录方式</span><br><span class="line">dbfilename dump_6380.rdb  # 指定本地数据库文件名</span><br></pre></td></tr></table></figure><p>附上新建redis实例操作截图：<br><img src="./redis启动多个实例.png" alt="GitHub Logo"></p><h4 id="使用Redis可视化工具远程连接"><a href="#使用Redis可视化工具远程连接" class="headerlink" title="使用Redis可视化工具远程连接"></a>使用Redis可视化工具远程连接</h4><p>可视化工具：redis desktop manager<br>ps:工具自行下载安装，连接。百度就好了，很简单。注意一点，如果设置了redis密码，连接时记得填写Auth项。如下图：<br><img src="./redis-远程连接.png" alt="GitHub Logo"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>一般可视化工具只是拿来查看数据。涉及到<code>redis</code>命令，比如get，set等，还是要自己在终端多敲一下，熟悉起来也更快！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;注：下面$符号后面跟的都是命令！&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;&lt;font color=&quot;0099ff&quot; size=&quot;3&quot;&gt;前言&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;空闲时间
      
    
    </summary>
    
      <category term="数据库" scheme="http://xiangjiangcheng.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="redis" scheme="http://xiangjiangcheng.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>xio习Redis</title>
    <link href="http://xiangjiangcheng.cn/2018/05/15/xio%E4%B9%A0Redis/"/>
    <id>http://xiangjiangcheng.cn/2018/05/15/xio习Redis/</id>
    <published>2018-05-15T12:46:11.000Z</published>
    <updated>2018-05-15T13:17:35.406Z</updated>
    
    <content type="html"><![CDATA[<hr><p>Redis入门到放弃（使用篇+代码实例）</p><h3 id="set（有序集合）"><a href="#set（有序集合）" class="headerlink" title="set（有序集合）"></a>set（有序集合）</h3><h3 id="认识："><a href="#认识：" class="headerlink" title="认识："></a><font color="0099ff" size="3">认识：</font></h3><p>有序集合</p><h3 id="命令："><a href="#命令：" class="headerlink" title="命令："></a><font color="0099ff" size="3">命令：</font></h3><p>这里参数关键字都比较多，所以下面开始列举的命令， <code>关键字</code>都使用 <code>大写</code><br>有序集合中,有key(键)、score（分数）、member（元素）三个参数！其中member为元素，score为member对应的分数。也就是说一个key里面有多个member，一个member又对应了一个score。后面我们根据分数的范围获取集合及其他操作（类似于筛选）。</p><p>1、新增元素<br><strong> ZADD key score member [score member …] </strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zadd scoreboard <span class="number">89</span> tom</span><br><span class="line">(integer) <span class="number">1</span>     <span class="comment">//添加一个</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zadd scoreboard <span class="number">70</span> peter <span class="number">100</span> david</span><br><span class="line">(integer) <span class="number">2</span>     <span class="comment">//添加多个</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zrange scoreboard <span class="number">0</span> <span class="number">-1</span> withscores     </span><br><span class="line"><span class="number">1</span>) <span class="string">"peter"</span>      <span class="comment">//带分数输出</span></span><br><span class="line"><span class="number">2</span>) <span class="string">"70"</span></span><br><span class="line"><span class="number">3</span>) <span class="string">"tom"</span></span><br><span class="line"><span class="number">4</span>) <span class="string">"89"</span></span><br><span class="line"><span class="number">5</span>) <span class="string">"david"</span></span><br><span class="line"><span class="number">6</span>) <span class="string">"100"</span></span><br></pre></td></tr></table></figure></p><p>2、获得元素的分数<br><strong>ZSCORE key member</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zscore scoreboard peter</span><br><span class="line"><span class="string">"76"</span></span><br></pre></td></tr></table></figure></p><p>3、获得排名在某个范围的元素列表<br><strong>ZRANGE key start stop [WITHSCORE]</strong></p><p><strong> ZREVRANGE key start stop [WITHSCORE] </strong></p><blockquote><p>ZRANGE命令会按照元素分数的从小到大顺序返回索引从start到stop之间所有的元素（包含两端）。ZRANGE与LRANGE命令相似，索引从0开始，负数一样代表从后向前查找（-1是最后一个）。WITHSCORE代表是否加上分数。</p></blockquote><p>4、获得指定分数范围的元素<br><strong>ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]</strong></p><blockquote><p>这个命令参数很多，但是都很好理解。这个命令用来获取指定分数范围的元素，min是最小值，max是最大值，WITHSCORE还是和上面介绍的一样，LIMIT是为了指定偏移量及数量的，和sql的有点像。offset是偏移量，count是数量。同时这些min和max都是包含的，如果要想不包含，需要使用“(”符号。</p></blockquote><p>5、增加某个元素的分数<br><strong>ZINCRBY key incremnet member</strong></p><p>6、获得集合中元素的数量<br><strong>ZCARD key</strong></p><blockquote><p>这个命令和SCARD类似，也就不多说了。</p></blockquote><p>7、获得指定分数范围的元素个数<br><strong>ZCOUNT key min max</strong></p><blockquote><p>这里就是获得min和max分数之间的元素数，当然这里也支持“(”符号。</p></blockquote><p>8、删除一个或多个元素<br><strong>ZREM key member [member …]</strong></p><blockquote><p>返回值是成功删除的元素的个数。</p></blockquote><p>9、按照排名范围删除元素<br><strong>ZREMRANGEBYRANK key start stop</strong></p><blockquote><p>这个命令按照元素分数从小到大顺序删除指定范围内所有的元素（其实就是先排序，然后按照排好的序列的索引删除），并返回删除的元素的数量。</p></blockquote><p>10、按照分数范围删除元素<br><strong>ZREMRANGEBYSCORE key min max</strong></p><blockquote><p>这里就是直接删除分数范围的元素了，这里分数同样支持“(”符号，返回删除数量。</p></blockquote><p>11、获得元素的排名<br><strong>ZRANK key member</strong><br><strong>ZREVRANK key member</strong></p><blockquote><p>ZRANK命令按照元素分数的从小到大的顺序获得制定元素的排名（第一个从0开始），ZREVRANK则相反。</p></blockquote><h3 id="实际应用场景："><a href="#实际应用场景：" class="headerlink" title="实际应用场景："></a><font color="0099ff" size="3">实际应用场景：</font></h3><p>最后我们举个实际应用的例子。</p><p>我们把wordpress的文章按点击率排序，关系数据库我们是遍历所有的文章排序点击数，如果使用Redis，我们需要一个posts:page.view键的有序集合类型，然后每个member为文章ID，score为文章的点击量。这样我们就可以用<code>ZREVRANGE</code>命令获取点击量排行榜。</p><p>还有一个实际的例子，我们用有序集合类型保存文章的发布时间（时间用UNIX时间及时间的毫秒数）与文章ID，这样我们可以很方便的按时间来查看文章列表，我们的文章列表应该是用文章发布时间排序而不应该用文章ID排序的。</p><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a><font color="0099ff" size="3">例子：</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 下面为校验密码输入错误次数 超过设置次数则锁定钱包</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">checkInputPWDCount</span><span class="params">(Integer userId, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">Jedis jedis = RedisPool.getJedis();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Map&lt;String, Object&gt; checkMap = getCheckTimeAndCount(jedis);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> != checkMap) &#123;</span><br><span class="line"><span class="keyword">return</span> checkMap;</span><br><span class="line">&#125;</span><br><span class="line">String ip = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 获取到操作次数</span></span><br><span class="line">Double phoneScore = jedis.zscore(Rkey.REPEAT_REQUEST_CACHE, String.valueOf(userId));</span><br><span class="line"></span><br><span class="line">Long currentTime = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> != phoneScore &amp;&amp; org.apache.commons.lang3.StringUtils.isNotEmpty(phoneScore.toString())) &#123;</span><br><span class="line">Map&lt;String, Object&gt; map = checkInputPWDRepeat(phoneScore, currentTime, jedis, String.valueOf(userId), userId);</span><br><span class="line"><span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Double score = Double.valueOf(currentTime + <span class="string">"1"</span>);</span><br><span class="line">jedis.zadd(Rkey.REPEAT_REQUEST_CACHE, score, String.valueOf(userId));</span><br><span class="line">phoneScore = jedis.zscore(Rkey.REPEAT_REQUEST_CACHE, String.valueOf(userId));</span><br><span class="line">Map&lt;String, Object&gt; map = checkInputPWDRepeat(phoneScore, currentTime, jedis, String.valueOf(userId), userId);</span><br><span class="line"><span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取IP地址</span></span><br><span class="line"><span class="keyword">if</span> (request.getHeader(<span class="string">"x-forwarded-for"</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">ip = request.getRemoteAddr();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ip = request.getHeader(<span class="string">"x-forwarded-for"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ip == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取缓存数据</span></span><br><span class="line">Double ipScore = jedis.zscore(Rkey.REPEAT_REQUEST_CACHE, ip);</span><br><span class="line"><span class="comment">//检测IP</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> != ipScore &amp;&amp; org.apache.commons.lang3.StringUtils.isNotEmpty(ipScore.toString())) &#123;</span><br><span class="line">Map&lt;String, Object&gt; map = checkInputPWDRepeat(ipScore, currentTime, jedis, ip, userId);</span><br><span class="line"><span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Double score = Double.valueOf(currentTime + <span class="string">"1"</span>);</span><br><span class="line">jedis.zadd(Rkey.REPEAT_REQUEST_CACHE, score, ip);</span><br><span class="line">phoneScore = jedis.zscore(Rkey.REPEAT_REQUEST_CACHE, String.valueOf(userId));</span><br><span class="line">Map&lt;String, Object&gt; map = checkInputPWDRepeat(ipScore, currentTime, jedis, ip, userId);</span><br><span class="line"><span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">RedisPool.returnJedis(jedis);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">checkInputPWDRepeat</span><span class="params">(Double score, Long currentTime, Jedis jedis, String checkStr, Integer userId)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 限制时间 默认1分钟</span></span><br><span class="line">Long timeLimit = <span class="number">60000L</span>;</span><br><span class="line"><span class="comment">// 限制次数</span></span><br><span class="line">Integer countLimit = <span class="number">5</span>;</span><br><span class="line"><span class="comment">// 读取redis的配置</span></span><br><span class="line">String x = jedis.get(Rkey.WALLET_LOCK_X);</span><br><span class="line"><span class="keyword">if</span> (!StringUtils.isEmpty(x)) &#123;</span><br><span class="line">timeLimit = Long.valueOf(x);</span><br><span class="line">&#125;</span><br><span class="line">String y = jedis.get(Rkey.WALLET_LOCK_Y);</span><br><span class="line"><span class="keyword">if</span> (!StringUtils.isEmpty(y)) &#123;</span><br><span class="line">countLimit = Integer.valueOf(y);</span><br><span class="line">&#125;</span><br><span class="line">Map&lt;String, Object&gt; returnMap = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">String str = String.valueOf(score.longValue());</span><br><span class="line">String previousTime = str.substring(<span class="number">0</span>, <span class="number">13</span>);</span><br><span class="line">Integer requestCount = Integer.valueOf(str.substring(<span class="number">13</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (currentTime - Long.valueOf(previousTime) &lt; timeLimit &amp;&amp; requestCount &gt;= countLimit) &#123;</span><br><span class="line">returnMap.put(<span class="string">"errorCode"</span>, E.INVALID_REQUEST);</span><br><span class="line">returnMap.put(<span class="string">"msg"</span>, <span class="string">"密码输入次数太频繁，钱包功能已锁定！解锁后可正常使用！"</span>);</span><br><span class="line">returnMap.put(<span class="string">"keepCount"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 2018/4/18  锁定钱包</span></span><br><span class="line">updateIsLockByUserId(userId, Boolean.TRUE);</span><br><span class="line"><span class="keyword">return</span> returnMap;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (currentTime - Long.valueOf(previousTime) &gt; timeLimit) &#123;</span><br><span class="line">Double newScore = Double.valueOf(currentTime + <span class="string">"1"</span>);</span><br><span class="line">jedis.zadd(Rkey.REPEAT_REQUEST_CACHE, newScore, checkStr);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">jedis.zincrby(Rkey.REPEAT_REQUEST_CACHE, <span class="number">1</span>, checkStr);</span><br><span class="line"><span class="keyword">long</span> keepCount = countLimit - requestCount;</span><br><span class="line"><span class="keyword">if</span> (keepCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">returnMap.put(<span class="string">"keepCount"</span>, keepCount);</span><br><span class="line">returnMap.put(<span class="string">"errorCode"</span>, E.INVALID_REQUEST);</span><br><span class="line">returnMap.put(<span class="string">"msg"</span>, <span class="string">"支付密码错误，还有"</span> + keepCount + <span class="string">"机会"</span>);</span><br><span class="line"><span class="keyword">return</span> returnMap;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;Redis入门到放弃（使用篇+代码实例）&lt;/p&gt;
&lt;h3 id=&quot;set（有序集合）&quot;&gt;&lt;a href=&quot;#set（有序集合）&quot; class=&quot;headerlink&quot; title=&quot;set（有序集合）&quot;&gt;&lt;/a&gt;set（有序集合）&lt;/h3&gt;&lt;h3 id=&quot;认识：&quot;
      
    
    </summary>
    
      <category term="日常杂记" scheme="http://xiangjiangcheng.cn/categories/%E6%97%A5%E5%B8%B8%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="redis" scheme="http://xiangjiangcheng.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Gogs私服搭建</title>
    <link href="http://xiangjiangcheng.cn/2018/05/15/Gogs%E7%A7%81%E6%9C%8D%E6%90%AD%E5%BB%BA/"/>
    <id>http://xiangjiangcheng.cn/2018/05/15/Gogs私服搭建/</id>
    <published>2018-05-15T11:55:39.000Z</published>
    <updated>2018-05-15T12:38:41.962Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><font color="0099ff" size="3">前言</font></h3><p>空闲时间，使用docker方式，搭建gogs，用来进行项目版本控制。阅读这篇博客时，我假定你之前有过基本的docker使用经验或者至少对docker有着一定的了解。否则，建议你使用这种方式去搭建，传送门：<a href="http://huangqing.top/2018/05/09/Gogs%E6%90%AD%E5%BB%BA%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/" target="_blank" rel="noopener">庆爷搭建gogs的心酸历程</a></p><h3 id="What-is-Gogs"><a href="#What-is-Gogs" class="headerlink" title="What is Gogs?"></a><font color="0099ff" size="3">What is Gogs?</font></h3><p>一款极易搭建的自助<code>Git</code>服务，用来进行代码版本控制。</p><p>优点：Gogs, 用 docker 跑很方便，外观也漂亮，轻巧简洁，运行快速，几百人使用完全可以满足。</p><p>比较：关于私有化git服务，目前了解的有 <code>gitlab</code>，<code>gitblit</code>，<code>gittea</code> 和 <code>Gogs</code>。上家公司用的gitlba，现在公司用的gitblit。<br>gitlab:Gitlab 功能很全，但你需要一个配置足够好的机器来跑，毕竟集成了太多的东西，比较耗内存，慢。自己手动搭建会比较复杂，推荐使用官方的docker image，搭建起来会容易一点。</p><p>ps:具体选择要看应用场景，以及服务器的配置等……</p><h3 id="安装gogs"><a href="#安装gogs" class="headerlink" title="安装gogs"></a><font color="0099ff" size="3">安装gogs</font></h3><p>您可以通过以下 5 种方式来安装 Gogs：</p><p>二进制安装<br>源码安装<br>包管理安装<br>采用 Docker 部署<br>通过 Vagrant 安装<br>我是用的第4种 “采用 Docker 部署”,其他安装方式请点<a href="https://github.com/gogits/gogs/blob/master/README_ZH.md" target="_blank" rel="noopener">这里</a><br>1、安装docker。<br>2、安装mysql。<br>3、拉取gogs镜像。<br>4、启动gogs容器<br>5、然后在浏览器中访问<a href="http://服务器IP:3000/，就可以打开web安装界面，进行相应的配置，然后，你就可以玩了。" target="_blank" rel="noopener">http://服务器IP:3000/，就可以打开web安装界面，进行相应的配置，然后，你就可以玩了。</a></p><h3 id="Docker方式安装gogs"><a href="#Docker方式安装gogs" class="headerlink" title="Docker方式安装gogs"></a><font color="0099ff" size="3">Docker方式安装gogs</font></h3><h4 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h4><p>阿里云服务器 Ubuntu 16.04.3 LTS </p><h4 id="安装Gogs所需环境"><a href="#安装Gogs所需环境" class="headerlink" title="安装Gogs所需环境"></a>安装Gogs所需环境</h4><p>1.安装nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure></p><p>2.安装git<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure></p><p>3.安装MySQL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure></p><p>安装mysql会弹出一个框，提示输入数据库密码，这里我输入的123456；输入两次，然后ok，继续安装。</p><p>ps:以上3步，你可能会遇到安装失败的情况，可以试试再执行上面的命令前先执行下面一条命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></p><p>4.创建gogs数据库<br>// 安装好了mysql,可以使用Navicat或者其他数据库管理工具连接上数据库，创建一个数据库，数据库名：gogs<br>// 当然也可以直接在服务器上面sql新建，看个人喜爱<br>// 下面是新建数据库的sql命令<br>// 登录数据库<br>mysql -u root -p<br>// 输入数据库密码：123456 进入到mysql命令行界面,执行下面条命令<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL storage_engine = <span class="string">'InnoDB'</span>;</span><br><span class="line">CREATE DATABASE gogs CHARACTER SET utf8 COLLATE utf8_bin;</span><br><span class="line">GRANT ALL PRIVILEGES ON gogs.* TO ‘root’@‘localhost’ IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">QUIT；</span><br><span class="line"></span><br><span class="line"><span class="comment">// # 123456是你设置的mysql数据库密码</span></span><br></pre></td></tr></table></figure></p><p>5.安装docker<br>简单方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker</span><br></pre></td></tr></table></figure></p><p>ps:详见:<a href="https://www.linuxidc.com/Linux/2016-12/138489.htm" target="_blank" rel="noopener">Ubuntu 16.04安装Docker</a>，用centos或者其他系统的请自行百度，确保docker成功安装，再进行下面的步骤。</p><h4 id="安装Gogs，配置"><a href="#安装Gogs，配置" class="headerlink" title="安装Gogs，配置"></a>安装Gogs，配置</h4><p>6.拉取gogs镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker images  # 查看本地拉取了的镜像</span><br><span class="line">docker pull mysql  # 拉取mysql镜像</span><br><span class="line">docker pull gogs/gogs  # 拉取gogs镜像</span><br><span class="line">docker images  # 查看本地拉取了的镜像，看是否拉取了gogs、</span><br></pre></td></tr></table></figure></p><p>7.启动gogs镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=mygogs -p 10022:22 -p 10080:3000 -v /var/gogs:/data gogs/gogs  # 启动gogs容器,使用镜像gogs/gogs以后台模式启动一个容器,将容器的3000端口映射到主机的10080端口,主机的目录/var/gogs映射到容器的/data。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 下面几个命令用来查看容器进程，可以忽略</span><br><span class="line">docker ps -a # 查看容器进程, 加上参数-a,表示查看所有进程，包括已经退出的</span><br><span class="line">docker stop a01d66f87d71 # 停止id为a01d66f87d71的容器</span><br><span class="line">docker rm a01d66f87d71 # 移除id为a01d66f87d71的容器</span><br></pre></td></tr></table></figure></p><p>8.首次配置<br>启动完成后，在浏览器中访问：<a href="http://ip:10080" target="_blank" rel="noopener">http://ip:10080</a><br>ps:为什么访问10080，是因为gogs的默认端口是3000，docker启动gogs容器时，将容器的3000端口映射到主机的10080端口，所以访问服务器的10080端口，也就是访问容器的3000端口！</p><p>第一次访问Gogs，浏览器进入安装页面，如图所示填写字段<br><img src="./1949753-3150458000611564.png" alt="GitHub Logo"><br><img src="./1949753-a0193800e94c6aa2.png" alt="GitHub Logo"><br><img src="./TIM图片20180515131440.png" alt="GitHub Logo"><br>然后就ok了，全部结束了，愉快的使用gogs吧。其中有些命令是我自己记下来熟悉的，可以忽略。<br>附上一张效果图：<br><img src="./gogs效果图.png" alt="GitHub Logo"></p><h3 id="手动搭建方式安装gogs"><a href="#手动搭建方式安装gogs" class="headerlink" title="手动搭建方式安装gogs"></a><font color="0099ff" size="3">手动搭建方式安装gogs</font></h3><p>传送门：<a href="http://huangqing.top/2018/05/09/Gogs%E6%90%AD%E5%BB%BA%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/" target="_blank" rel="noopener">庆爷搭建gogs的心酸历程</a></p><h3 id="安装过程遇到的坑"><a href="#安装过程遇到的坑" class="headerlink" title="安装过程遇到的坑"></a><font color="0099ff" size="3">安装过程遇到的坑</font></h3><p>1.阿里云服务器做了端口限制，远程连接数据库或者访问gogs时，需要放开相应的端口，否则会出现连不上的情况；</p><p>本教程中:<code>gogs -&gt; 10080,mysql -&gt; 3306</code>。所以阿里云安全组里面应该放开这两个端口。如下图：<br><img src="./aliyun-放开端口.png" alt="GitHub Logo"></p><p>2.gogs第一个注册的用户即为管理员，我搭好后，忘了密码，然后想的是，直接注册一个新的账号，通过修改数据库的方式，将管理员账号的password替换为新注册的用户密码；多次实验，结果发现登录不了，原来gogs在进行用户注册时，不是直接将输入的密码拿来进行加密，应该是将输入的密码（a）+其他值，如用户名等(b) = 得到一个全新的字符串(c)，再将c进行的加密！还是自己太年轻！当然，如果你确实忘记了管理员密码，你可以操作数据库，删除user表中id=1的那条数据，将重新注册的那个账号的id设置为1，则这个账号即为管理员账号。</p><p>3.还有一点，ubuntu 设置远程访问数据库，除了开放3306端口，给用户授权，还需要修改mysql配置文件。<br>找到mysql的这个配置文件：<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code></p><p>用管理员权限编辑这个文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure></p><p>往下面翻，<br>在<code>bind-address = 127.0.0.1</code>这一行前面添加<code>#</code>，将其注释掉。ok，原来mysql自己配置了本地的地址。<br>注释按esc，输入<code>:wq</code>保存，重启MySQL服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure></p><p>或者：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop</span><br><span class="line">service mysql start</span><br></pre></td></tr></table></figure></p><p>4.可能你会去修改gogs的配置文件<br>docker安装gogs完成后，Gogs配置文件位置（<code>/var/gogs/gogs/conf/app.ini</code>）</p><h3 id="我的Gogs"><a href="#我的Gogs" class="headerlink" title="我的Gogs"></a><font color="0099ff" size="3">我的Gogs</font></h3><p>url:<a href="http://59.110.155.32:10080/" target="_blank" rel="noopener">http://59.110.155.32:10080/</a><br>测试用户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：gg</span><br><span class="line">密码：123456</span><br></pre></td></tr></table></figure></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><font color="0099ff" size="3">总结</font></h3><p>在这次搭建gogs的过程中，对docker又有了更加深入的了解，即便只有那么一点点。感谢那些技术大神！感谢世界和平！</p><h3 id="查阅资料"><a href="#查阅资料" class="headerlink" title="查阅资料"></a><font color="0099ff" size="3">查阅资料</font></h3><p><a href="https://www.cnblogs.com/anliven/p/6799429.html" target="_blank" rel="noopener">Docker - 访问容器</a><br><a href="https://www.jianshu.com/p/64e9708c23e7" target="_blank" rel="noopener">Docker 方式安装Gogs</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;&lt;font color=&quot;0099ff&quot; size=&quot;3&quot;&gt;前言&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;空闲时间，使用docker方式，搭建gogs，用来进行项
      
    
    </summary>
    
      <category term="日常杂记" scheme="http://xiangjiangcheng.cn/categories/%E6%97%A5%E5%B8%B8%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="gogs" scheme="http://xiangjiangcheng.cn/tags/gogs/"/>
    
      <category term="docker" scheme="http://xiangjiangcheng.cn/tags/docker/"/>
    
      <category term="git" scheme="http://xiangjiangcheng.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>小白之快速搭建svn教程</title>
    <link href="http://xiangjiangcheng.cn/2018/02/16/%E5%B0%8F%E7%99%BD%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAsvn%E6%95%99%E7%A8%8B/"/>
    <id>http://xiangjiangcheng.cn/2018/02/16/小白之快速搭建svn教程/</id>
    <published>2018-02-16T01:27:38.000Z</published>
    <updated>2018-02-16T01:54:40.857Z</updated>
    
    <content type="html"><![CDATA[<p><img src="ishadow.png" alt="alt text" title="Title"></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>作为一名技术男，总是去网上买vpn账号来翻墙，还是会有些脸红。我也是小白一枚，刚开始也是使用一些网站提供的免费vpn账号来翻墙（网上账号太贵）。后面在了解了翻墙的原理之后，打算自己搭建vpn</p></blockquote><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol><li>自行了解<code>vps</code>的概念以及作用;</li><li>购买一个国外vps</li></ol><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>步骤1.</p><blockquote><p>购买一个国外vps！要求预装linux系统，同时拿到服务器的主机，用户名，密码。例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">主机：155.94.235.113</span><br><span class="line">用户名：root</span><br><span class="line">密码：xddf12343</span><br></pre></td></tr></table></figure></p></blockquote><p>&gt;</p><blockquote><p>下面列出几个博主目前用过性价比较高（其实就是便宜）的国外的vps，下行速度有点慢（毕竟便宜）：</p><p>1.<a href="https://virmach.com/" target="_blank" rel="noopener">https://virmach.com/</a></p><p>2.<a href="http://www.vpsdx.com/3964.html" target="_blank" rel="noopener">http://www.vpsdx.com/3964.html</a></p><p>注意：国外vpn最好选择洛杉矶的，速度应该是最快的。</p></blockquote><p>步骤2.</p><blockquote><p>连接服务器</p><p>这里博主使用的是<code>Xbrowser 5</code>工具，安装及使用方法自行百度</p></blockquote><p>使用界面截图：<br><img src="ishadow.png" alt="alt text" title="Title"><br><img src="ishadow.png" alt="alt text" title="Title"><br><img src="ishadow.png" alt="alt text" title="Title"></p><p>步骤3.</p><blockquote><p>安装shadowsocks，配置账号</p><p>A.具体安装方法请参考：<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-libev</a></p><p>B.配置：参考<a href="https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File</a></p><p>C.启动，参考：<a href="https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E</a></p></blockquote><p>步骤4.</p><blockquote><p>使用ss或ssr客户端翻墙</p><p>先下载客户端：<a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p><p>配置账号</p><p>运行客户端，访问google</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h3 id="附上免费的vpn翻墙网站"><a href="#附上免费的vpn翻墙网站" class="headerlink" title="附上免费的vpn翻墙网站"></a>附上免费的vpn翻墙网站</h3><blockquote><p>1.<a href="https://global.ishadowx.net/index_cn.html" target="_blank" rel="noopener">免费ss账号 - ishadow</a></p><p>2.<a href="https://www.52ss.pl/" target="_blank" rel="noopener">吾爱ss</a></p></blockquote><p>注意：上面两个网站，第一个有很详细的教程，如何使用这里就不提了！第二个网站需要先注册一个账号，然后每天可领取流量，使用网站提供的免费节点。</p><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;ishadow.png&quot; alt=&quot;alt text&quot; title=&quot;Title&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="兴趣爱好" scheme="http://xiangjiangcheng.cn/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="svn" scheme="http://xiangjiangcheng.cn/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>初识Hexo+Next</title>
    <link href="http://xiangjiangcheng.cn/2018/01/17/%E5%88%9D%E8%AF%86Hexo-Next/"/>
    <id>http://xiangjiangcheng.cn/2018/01/17/初识Hexo-Next/</id>
    <published>2018-01-16T16:09:45.000Z</published>
    <updated>2018-01-18T18:30:17.217Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note success"><p>本篇博客主要用来记录我个人在搭建该博客时，查询资料过程中得到的一些总结，以及阅读过的一些有价值的文章！让一些从未搭建过博客的同学，可以花费更少的时间去搭建属于你的博客。</p></div><h2 id="Hexo是什么？"><a href="#Hexo是什么？" class="headerlink" title="Hexo是什么？"></a>Hexo是什么？</h2><p> Hexo 是一个快速、简洁且高效的博客框架。我个人理解，可以把他当作一个已经完成的项目来看待，而我们用Hexo搭建属于我们的博客，仅仅需要先把这个项目拉到我们本地电脑，根据官方文档进行一番配置（这里配置的前提是博客主题已经选好的情况下），然后部署到github上面，配上域名，则可以通过域名去访问。</p><p>详见Hexo官方文档：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p><h2 id="Next是什么？"><a href="#Next是什么？" class="headerlink" title="Next是什么？"></a>Next是什么？</h2><p>一种很简洁，目前很流行，使用文档非常详细的博客主题。</p><p>详见知乎解答：<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">https://www.zhihu.com/question/24422335</a></p><h2 id="快速搭建属于你的博客"><a href="#快速搭建属于你的博客" class="headerlink" title="快速搭建属于你的博客"></a>快速搭建属于你的博客</h2><p>网上使用Hexo + Next搭建博客的教程很多；就不从头重新写了。</p><p>贴上一篇我搭建博客参考的文章，这篇文章的作者已经写的很详细了；新手可以参考：<a href="https://www.jianshu.com/p/f66103553c45" target="_blank" rel="noopener">https://www.jianshu.com/p/f66103553c45</a> </p><p>注意:<br>安装Nodejs后，记得使用淘宝镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 查看是否npm安装成功</span><br><span class="line">$ npm -v</span><br><span class="line"># 使用淘宝镜像</span><br><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"># 查看cnpm是否安装成功</span><br><span class="line">$ cnpm -v</span><br></pre></td></tr></table></figure><p>以上命令正常执行,就可以优雅的使用cnpm代替npm安装主题了（速度会快很多）。</p><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span><br><span class="line">$ hexo clean</span><br><span class="line"># 生成静态文件 (部署)</span><br><span class="line">$ hexo generate  -&gt; $ hexo g (命令简写形式)</span><br><span class="line"># 启动服务器</span><br><span class="line">$ hexo serve</span><br><span class="line"># 发布到git上</span><br><span class="line">$ hexo deploy  -&gt; $ hexo d (命令简写形式)</span><br></pre></td></tr></table></figure><p>注意：以上命令都是在站点根目录下面运行！</p><p>其他详细命令见官方文档：<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></p><h2 id="优秀博客："><a href="#优秀博客：" class="headerlink" title="优秀博客："></a>优秀博客：</h2><ul><li><a href="http://www.cduyzh.com/" target="_blank" rel="noopener">http://www.cduyzh.com/</a></li><li><a href="http://shenzekun.cn/" target="_blank" rel="noopener">http://shenzekun.cn/</a></li><li><a href="https://appkfz.com/" target="_blank" rel="noopener">https://appkfz.com/</a></li><li><a href="http://visugar.com/" target="_blank" rel="noopener">http://visugar.com/</a></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">https://segmentfault.com/a/1190000009544924</a></li><li><a href="https://jiaqiangbandongg.github.io/2017/07/29/Hexo-NexT-%E6%B7%BB%E5%8A%A0%E5%B0%8F%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">https://jiaqiangbandongg.github.io/2017/07/29/Hexo-NexT-%E6%B7%BB%E5%8A%A0%E5%B0%8F%E5%8A%9F%E8%83%BD/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;本篇博客主要用来记录我个人在搭建该博客时，查询资料过程中得到的一些总结，以及阅读过的一些
      
    
    </summary>
    
      <category term="兴趣爱好" scheme="http://xiangjiangcheng.cn/categories/%E5%85%B4%E8%B6%A3%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="Hexo" scheme="http://xiangjiangcheng.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>我的博客</title>
    <link href="http://xiangjiangcheng.cn/2017/12/30/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://xiangjiangcheng.cn/2017/12/30/我的博客/</id>
    <published>2017-12-30T07:41:50.428Z</published>
    <updated>2017-12-30T07:43:35.974Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xiangjiangcheng.cn/2017/12/30/hello-world/"/>
    <id>http://xiangjiangcheng.cn/2017/12/30/hello-world/</id>
    <published>2017-12-30T06:43:35.538Z</published>
    <updated>2017-12-30T06:43:35.538Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
